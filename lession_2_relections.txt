What happens when you initialize a repository? Why do you need to do it?
---Initializing a reposotory creates a Git vesioning control for the folder, need to do it to start adding the commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?
---Staging Area is in between the working directory and repository where files are stored before they are committed

How can you use the staging area to make sure you have one commit per logical change?
---Staging area is helpful if you want to compare the changes between last commit and any modifications in the working directory.
---Compare any modifications you have done lately to the last commit can be helpful in verifying the changes

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
---Branches would be helpful when you are trying an exprimental version of the dame code or different version ...for example easy version of the same game

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
---Merging the two branches combines the changes between the two branches to one branch (checked out one). The diagram helps to vsualize how the branches were 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
---Automatic Merge 
----Pros: Time saving
----Cons: Doesn't know if there are conflicts
---Manual Merge
----Pros: Conflict Detection can be eliminated more logically
----Cons: Time Consuming